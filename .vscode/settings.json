{
	// UX
	"explorer.fileNesting.enabled": true,
	"search.exclude": {
		"**/.yarn": true,
		"**/lib": true,
		"**/node_modules": true
	},
	// Typescript settings
	"typescript.tsdk": "./node_modules/typescript/lib",
	// Linters & prettier extensions settings
	"editor.codeActionsOnSave": {
		"source.fixAll.eslint": false,
		"source.fixAll.tslint": false,
		"source.fixAll": false,
	},
	// General formatting
	"editor.detectIndentation": false,
	"editor.insertSpaces": false,
	"editor.renderFinalNewline": true,
	"editor.scrollBeyondLastLine": true,
	"editor.comments.insertSpace": false,
	"files.encoding": "utf8",
	"files.eol": "\n",
	"files.insertFinalNewline": true,
	"files.trimFinalNewlines": true,
	"files.trimTrailingWhitespace": true,
	"eslint.format.enable": true,
	"eslint.validate": [
		"javascript",
		"typescript"
	],
	// Language formatting
	"[markdown]": {
		"editor.wordWrap": "off",
		"editor.formatOnSave": false,
	},
	"[javascript]": {
		"editor.defaultFormatter": "vscode.typescript-language-features"
	},
	"[json]": {
		"editor.defaultFormatter": "vscode.json-language-features"
	},
	"javascript.format.insertSpaceAfterCommaDelimiter": true,
	"javascript.format.insertSpaceAfterConstructor": false,
	"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
	"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
	"javascript.format.insertSpaceAfterSemicolonInForStatements": true,
	"javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
	"javascript.format.insertSpaceBeforeFunctionParenthesis": false,
	"javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
	"javascript.format.placeOpenBraceOnNewLineForFunctions": true,
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,
	"javascript.format.semicolons": "insert",
	"javascript.preferences.quoteStyle": "double",
	"[typescript]": {
		"editor.defaultFormatter": "vscode.typescript-language-features"
	},
	"typescript.format.insertSpaceAfterCommaDelimiter": true,
	"typescript.format.insertSpaceAfterConstructor": false,
	"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
	"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
	"typescript.format.insertSpaceAfterSemicolonInForStatements": true,
	"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
	"typescript.format.insertSpaceBeforeFunctionParenthesis": false,
	"typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
	"typescript.format.placeOpenBraceOnNewLineForFunctions": true,
	"typescript.format.insertSpaceAfterTypeAssertion": false,
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,
	"typescript.format.semicolons": "insert",
	"typescript.preferences.quoteStyle": "double",
}
